############################################################## 
## MOD Title:          Upgrade to Adv. time management 2.1.1
## MOD Author:         -=ET=- < N/A > (N/A) http://www.golfexpert.net/phpbb
## MOD Description:    This MOD will allow you to upgrade your
##                     Advanced time management MOD from 2.1.0
##                     to 2.1.1
## MOD Version:        1.0.0
##
## Installation Level: Easy
## Installation Time:  5 Minutes (1mn by EasyMOD)
## Files To Edit:
##      admin/admin_board.php
##      admin/admin_users.php
##      includes/constants.php
##      includes/functions.php
##      includes/page_header.php
##      includes/sessions.php
##      includes/usercp_register.php
##      templates/subSilver/profile_add_body.tpl
##      templates/subSilver/admin/user_edit_body.tpl
## Included Files:
##      root/language/lang_dutch/lang_adv_time.php 
##      root/language/lang_english/lang_adv_time.php 
##      root/language/lang_french/lang_adv_time.php
##      root/language/lang_german/lang_adv_time.php 
##      root/language/lang_italian/lang_adv_time.php
##      root/language/lang_russian/lang_adv_time.php
##      root/language/lang_spanish/lang_adv_time.php
## License: http://opensource.org/licenses/gpl-license.php GNU Public License v2
##############################################################
## For security purposes, please check: http://www.phpbb.com/mods/
## for the latest version of this MOD. Although MODs are checked
## before being allowed in the MODs Database there is no guarantee
## that there are no security problems within the MOD. No support
## will be given for MODs not found within the MODs Database which
## can be found at http://www.phpbb.com/mods/
##############################################################
## Author Notes: 
## 
## Advanced time management MOD 2.1.0 needs to be already
## installed!!!
##
## The rest of the author notes are on the full install MOD
## in the root dir of this MOD archive!
## 
############################################################## 
## MOD History: 
##
##   2005-06-04 - Version 1.0.0
##      - Initial release
##
############################################################## 
## Before Adding This MOD To Your Forum, You Should Back Up All Files Related To This MOD 
############################################################## 
#
#-----[ SQL ]-------------------------------------------------
#
UPDATE phpbb_users SET user_time_mode = '4' WHERE user_time_mode = '5';

#
#-----[ COPY ]------------------------------------------------
#
copy root/language/lang_english/lang_adv_time.php to language/lang_english/lang_adv_time.php

#
# Warning! At the present time, the current release of EM is
# not able to install automatically other languages than English.
# This gap will be solved in the future but in the meantime, if
# you need to install any other language than English provides
# with this MOD, please copy the corresponding language file
# manually to switch with the English file duplicated in every
# language directory by EM:
# copy root/language/lang_xxxxx/lang_adv_time.php to language/lang_xxxxx/lang_adv_time.php
#

# 
#-----[ OPEN ]------------------------------------------------ 
# 
admin/admin_board.php 

# 
#-----[ FIND ]------------------------------------------------ 
# 
// Start add - Advanced time management MOD
switch ($new['default_time_mode']) 
{ 
	case 1:
		$time_mode_manual_dst_checked="checked=\"checked\"";
		break; 
	case 2:
		$time_mode_server_switch_checked="checked=\"checked\"";
		break; 
	case 3:
		$time_mode_full_server_checked="checked=\"checked\"";
		break; 
	case 4:
	case 5:
		$time_mode_server_pc_checked="checked=\"checked\"";
		break; 
	case 6:
		$time_mode_full_pc_checked="checked=\"checked\"";
		break; 
	default:
		$time_mode_manual_checked="checked=\"checked\""; 
} 
// End add - Advanced time management MOD

# 
#-----[ REPLACE WITH ]----------------------------------------
#
// Start add - Advanced time management MOD
switch ($new['default_time_mode']) 
{ 
	case MANUAL_DST:
		$time_mode_manual_dst_checked="checked=\"checked\"";
		break; 
	case SERVER_SWITCH:
		$time_mode_server_switch_checked="checked=\"checked\"";
		break; 
	case FULL_SERVER:
		$time_mode_full_server_checked="checked=\"checked\"";
		break; 
	case SERVER_PC:
		$time_mode_server_pc_checked="checked=\"checked\"";
		break; 
	case FULL_PC:
		$time_mode_full_pc_checked="checked=\"checked\"";
		break; 
	default:
		$time_mode_manual_checked="checked=\"checked\""; 
} 
// End add - Advanced time management MOD
# 
#-----[ FIND ]------------------------------------------------ 
# 
// Start add - Advanced time management MOD
'L_TIME_MODE' => $lang['time_mode'],
'L_TIME_MODE_TEXT' => $lang['time_mode_text'],
'L_TIME_MODE_MANUAL' => $lang['time_mode_manual'],
'L_TIME_MODE_DST' => $lang['time_mode_dst'],
'L_TIME_MODE_DST_OFF' => $lang['time_mode_dst_off'],
'L_TIME_MODE_DST_ON' => $lang['time_mode_dst_on'],
'L_TIME_MODE_DST_SERVER' => $lang['time_mode_dst_server'],
'L_TIME_MODE_DST_TIME_LAG' => $lang['time_mode_dst_time_lag'],
'L_TIME_MODE_DST_MN' => $lang['time_mode_dst_mn'],
'L_TIME_MODE_TIMEZONE' => $lang['time_mode_timezone'],
'L_TIME_MODE_AUTO' => $lang['time_mode_auto'],
'L_TIME_MODE_FULL_SERVER' => $lang['time_mode_full_server'],
'L_TIME_MODE_SERVER_PC' => $lang['time_mode_server_pc'],
'L_TIME_MODE_FULL_PC' => $lang['time_mode_full_pc'],
// End add - Advanced time management MOD

# 
#-----[ REPLACE WITH ]----------------------------------------
#
// Start add - Advanced time management MOD
'L_TIME_MODE' => $lang['time_mode'],
'L_TIME_MODE_TEXT' => $lang['time_mode_text'],
'L_TIME_MODE_MANUAL' => $lang['time_mode_manual'],
'L_TIME_MODE_DST' => $lang['time_mode_dst'],
'L_TIME_MODE_DST_SERVER' => $lang['time_mode_dst_server'],
'L_TIME_MODE_DST_TIME_LAG' => $lang['time_mode_dst_time_lag'],
'L_TIME_MODE_DST_MN' => $lang['time_mode_dst_mn'],
'L_TIME_MODE_TIMEZONE' => $lang['time_mode_timezone'],
'L_TIME_MODE_AUTO' => $lang['time_mode_auto'],
'L_TIME_MODE_FULL_SERVER' => $lang['time_mode_full_server'],
'L_TIME_MODE_SERVER_PC' => $lang['time_mode_server_pc'],
'L_TIME_MODE_FULL_PC' => $lang['time_mode_full_pc'],
// End add - Advanced time management MOD
# 
#-----[ OPEN ]------------------------------------------------
# 
admin/admin_users.php

# 
#-----[ FIND ]------------------------------------------------ 
#
// Start add - Advanced time management MOD
$l_time_mode_0 = $lang['time_mode_dst_off'];
$l_time_mode_1 = $lang['time_mode_dst_on'];
$l_time_mode_2 = $lang['time_mode_dst_server'];
$l_time_mode_3 = $lang['time_mode_full_server'];
$l_time_mode_4 = $lang['time_mode_server_pc'];
$l_time_mode_6 = $lang['time_mode_full_pc'];

switch ($board_config['default_time_mode']) 
{ 
	case 1:
		$l_time_mode_1 = $l_time_mode_1 . "*";
		break;
	case 2:
		$l_time_mode_2 = $l_time_mode_2 . "*";
		break;
	case 3:
		$l_time_mode_3 = $l_time_mode_3 . "*";
		break;
	case 4:
	case 5:
		$l_time_mode_4 = $l_time_mode_4 . "*";
		break;
	case 6:
		$l_time_mode_6 = $l_time_mode_6 . "*";
		break;
	default:
		$l_time_mode_0 = $l_time_mode_0 . "*";
		break;
} 

switch ($time_mode) 
{ 
	case 1:
		$time_mode_manual_dst_checked="checked=\"checked\"";
		break;
	case 2:
		$time_mode_server_switch_checked="checked=\"checked\"";
		break;
	case 3:
		$time_mode_full_server_checked="checked=\"checked\"";
		break;
	case 4:
	case 5:
		$time_mode_server_pc_checked="checked=\"checked\"";
		break;
	case 6:
		$time_mode_full_pc_checked="checked=\"checked\"";
		break;
	default:
		$time_mode_manual_checked="checked=\"checked\"";
		break;
} 
// End add - Advanced time management MOD

# 
#-----[ REPLACE WITH ]----------------------------------------
# 
// Start add - Advanced time management MOD
$l_time_mode_0 = "";
$l_time_mode_1 = "";
$l_time_mode_2 = $lang['time_mode_dst_server'];
$l_time_mode_3 = $lang['time_mode_full_server'];
$l_time_mode_4 = $lang['time_mode_server_pc'];
$l_time_mode_6 = $lang['time_mode_full_pc'];

switch ($board_config['default_time_mode']) 
{ 
	case MANUAL_DST:
		$l_time_mode_1 = $l_time_mode_1 . "*";
		break;
	case SERVER_SWITCH:
		$l_time_mode_2 = $l_time_mode_2 . "*";
		break;
	case FULL_SERVER:
		$l_time_mode_3 = $l_time_mode_3 . "*";
		break;
	case SERVER_PC:
		$l_time_mode_4 = $l_time_mode_4 . "*";
		break;
	case FULL_PC:
		$l_time_mode_6 = $l_time_mode_6 . "*";
		break;
	default:
		$l_time_mode_0 = $l_time_mode_0 . "*";
		break;
} 

switch ($time_mode) 
{ 
	case MANUAL_DST:
		$time_mode_manual_dst_checked="checked=\"checked\"";
		break;
	case SERVER_SWITCH:
		$time_mode_server_switch_checked="checked=\"checked\"";
		break;
	case FULL_SERVER:
		$time_mode_full_server_checked="checked=\"checked\"";
		break;
	case SERVER_PC:
		$time_mode_server_pc_checked="checked=\"checked\"";
		break;
	case FULL_PC:
		$time_mode_full_pc_checked="checked=\"checked\"";
		break;
	default:
		$time_mode_manual_checked="checked=\"checked\"";
		break;
} 
// End add - Advanced time management MOD
# 
#-----[ OPEN ]------------------------------------------------ 
#
includes/constants.php

# 
#-----[ FIND ]------------------------------------------------ 
#
?>

# 
#-----[ BEFORE, ADD ]----------------------------------------- 
#

// Start add - Advanced time management MOD
define('MANUAL', 0);
define('MANUAL_DST', 1);
define('SERVER_SWITCH', 2);
define('FULL_SERVER', 3);
define('SERVER_PC', 4);
define('FULL_PC', 6);
// End add - Advanced time management MOD

# 
#-----[ OPEN ]------------------------------------------------ 
#
includes/functions.php

# 
#-----[ FIND ]------------------------------------------------ 
# 
// Start replacement - Advanced time management MOD
if ( $userdata['user_id'] != ANONYMOUS )
{
	switch ( $userdata['user_time_mode'] )
	{
		case 1:
			$dst_sec = $userdata['user_dst_time_lag'] * 60;
			return ( !empty($translate) ) ? strtr(@gmdate($format, $gmepoch + (3600 * $tz) + $dst_sec), $translate) : @gmdate($format, $gmepoch + (3600 * $tz) + $dst_sec);
			break;
		case 2:
			$dst_sec = date('I', $gmepoch) * $userdata['user_dst_time_lag'] * 60;
			return ( !empty($translate) ) ? strtr(@gmdate($format, $gmepoch + (3600 * $tz) + $dst_sec), $translate) : @gmdate($format, $gmepoch + (3600 * $tz) + $dst_sec);
			break;
		case 3:
			return ( !empty($translate) ) ? strtr(@date($format, $gmepoch), $translate) : @date($format, $gmepoch);
			break;
		case 4:
		case 5:
			if ( isset($pc_dateTime['pc_timezoneOffset']) )
			{
				$tzo_sec = $pc_dateTime['pc_timezoneOffset'];
			} else
			{
				$user_pc_timeOffsets = explode("/", $userdata['user_pc_timeOffsets']);
				$tzo_sec = $user_pc_timeOffsets[0];
			}
			return ( !empty($translate) ) ? strtr(@gmdate($format, $gmepoch + $tzo_sec), $translate) : @gmdate($format, $gmepoch + $tzo_sec); 
			break;
		case 6:
			if ( isset($pc_dateTime['pc_timeOffset']) )
			{
				$tzo_sec = $pc_dateTime['pc_timeOffset'];
			} else
			{
				$user_pc_timeOffsets = explode("/", $userdata['user_pc_timeOffsets']);
				$tzo_sec = $user_pc_timeOffsets[1];
			}
			return ( !empty($translate) ) ? strtr(@gmdate($format, $gmepoch + $tzo_sec), $translate) : @gmdate($format, $gmepoch + $tzo_sec); 
			break;
		default:
			return ( !empty($translate) ) ? strtr(@gmdate($format, $gmepoch + (3600 * $tz)), $translate) : @gmdate($format, $gmepoch + (3600 * $tz)); 
			break;
	}
} else
{
	switch ( $board_config['default_time_mode'] )
	{
		case 1:
			$dst_sec = $board_config['default_dst_time_lag'] * 60;
			return ( !empty($translate) ) ? strtr(@gmdate($format, $gmepoch + (3600 * $tz) + $dst_sec), $translate) : @gmdate($format, $gmepoch + (3600 * $tz) + $dst_sec);
			break;
		case 2:
			$dst_sec = date('I', $gmepoch) * $board_config['default_dst_time_lag'] * 60; 
			return ( !empty($translate) ) ? strtr(@gmdate($format, $gmepoch + (3600 * $tz) + $dst_sec), $translate) : @gmdate($format, $gmepoch + (3600 * $tz) + $dst_sec);
			break;
		case 3:
			return ( !empty($translate) ) ? strtr(@date($format, $gmepoch), $translate) : @date($format, $gmepoch);
			break;
		case 4:
		case 5:
			if ( isset($pc_dateTime['pc_timezoneOffset']) )
			{
				$tzo_sec = $pc_dateTime['pc_timezoneOffset'];
			} else
			{
				$tzo_sec = 0;
			}
			return ( !empty($translate) ) ? strtr(@gmdate($format, $gmepoch + $tzo_sec), $translate) : @gmdate($format, $gmepoch + $tzo_sec); 
			break;
		case 6:
			if ( isset($pc_dateTime['pc_timeOffset']) )
			{
				$tzo_sec = $pc_dateTime['pc_timeOffset'];
			} else
			{
				$tzo_sec = 0;
			}
			return ( !empty($translate) ) ? strtr(@gmdate($format, $gmepoch + $tzo_sec), $translate) : @gmdate($format, $gmepoch + $tzo_sec); 
			break;
		default:
			return ( !empty($translate) ) ? strtr(@gmdate($format, $gmepoch + (3600 * $tz)), $translate) : @gmdate($format, $gmepoch + (3600 * $tz)); 
			break;
	} 
}
// End replacement - Advanced time management MOD

#
#-----[ REPLACE WITH ]----------------------------------------
#
// Start replacement - Advanced time management MOD
if ( $userdata['user_id'] != ANONYMOUS )
{
	switch ( $userdata['user_time_mode'] )
	{
		case MANUAL_DST:
			$dst_sec = $userdata['user_dst_time_lag'] * 60;
			return ( !empty($translate) ) ? strtr(@gmdate($format, $gmepoch + (3600 * $tz) + $dst_sec), $translate) : @gmdate($format, $gmepoch + (3600 * $tz) + $dst_sec);
			break;
		case SERVER_SWITCH:
			$dst_sec = date('I', $gmepoch) * $userdata['user_dst_time_lag'] * 60;
			return ( !empty($translate) ) ? strtr(@gmdate($format, $gmepoch + (3600 * $tz) + $dst_sec), $translate) : @gmdate($format, $gmepoch + (3600 * $tz) + $dst_sec);
			break;
		case FULL_SERVER:
			return ( !empty($translate) ) ? strtr(@date($format, $gmepoch), $translate) : @date($format, $gmepoch);
			break;
		case SERVER_PC:
			if ( isset($pc_dateTime['pc_timezoneOffset']) )
			{
				$tzo_sec = $pc_dateTime['pc_timezoneOffset'];
			} else
			{
				$user_pc_timeOffsets = explode("/", $userdata['user_pc_timeOffsets']);
				$tzo_sec = $user_pc_timeOffsets[0];
			}
			return ( !empty($translate) ) ? strtr(@gmdate($format, $gmepoch + $tzo_sec), $translate) : @gmdate($format, $gmepoch + $tzo_sec); 
			break;
		case FULL_PC:
			if ( isset($pc_dateTime['pc_timeOffset']) )
			{
				$tzo_sec = $pc_dateTime['pc_timeOffset'];
			} else
			{
				$user_pc_timeOffsets = explode("/", $userdata['user_pc_timeOffsets']);
				$tzo_sec = $user_pc_timeOffsets[1];
			}
			return ( !empty($translate) ) ? strtr(@gmdate($format, $gmepoch + $tzo_sec), $translate) : @gmdate($format, $gmepoch + $tzo_sec); 
			break;
		default:
			return ( !empty($translate) ) ? strtr(@gmdate($format, $gmepoch + (3600 * $tz)), $translate) : @gmdate($format, $gmepoch + (3600 * $tz)); 
			break;
	}
} else
{
	switch ( $board_config['default_time_mode'] )
	{
		case MANUAL_DST:
			$dst_sec = $board_config['default_dst_time_lag'] * 60;
			return ( !empty($translate) ) ? strtr(@gmdate($format, $gmepoch + (3600 * $tz) + $dst_sec), $translate) : @gmdate($format, $gmepoch + (3600 * $tz) + $dst_sec);
			break;
		case SERVER_SWITCH:
			$dst_sec = date('I', $gmepoch) * $board_config['default_dst_time_lag'] * 60; 
			return ( !empty($translate) ) ? strtr(@gmdate($format, $gmepoch + (3600 * $tz) + $dst_sec), $translate) : @gmdate($format, $gmepoch + (3600 * $tz) + $dst_sec);
			break;
		case FULL_SERVER:
			return ( !empty($translate) ) ? strtr(@date($format, $gmepoch), $translate) : @date($format, $gmepoch);
			break;
		case SERVER_PC:
			if ( isset($pc_dateTime['pc_timezoneOffset']) )
			{
				$tzo_sec = $pc_dateTime['pc_timezoneOffset'];
			} else
			{
				$tzo_sec = 0;
			}
			return ( !empty($translate) ) ? strtr(@gmdate($format, $gmepoch + $tzo_sec), $translate) : @gmdate($format, $gmepoch + $tzo_sec); 
			break;
		case FULL_PC:
			if ( isset($pc_dateTime['pc_timeOffset']) )
			{
				$tzo_sec = $pc_dateTime['pc_timeOffset'];
			} else
			{
				$tzo_sec = 0;
			}
			return ( !empty($translate) ) ? strtr(@gmdate($format, $gmepoch + $tzo_sec), $translate) : @gmdate($format, $gmepoch + $tzo_sec); 
			break;
		default:
			return ( !empty($translate) ) ? strtr(@gmdate($format, $gmepoch + (3600 * $tz)), $translate) : @gmdate($format, $gmepoch + (3600 * $tz)); 
			break;
	} 
}
// End replacement - Advanced time management MOD
# 
#-----[ OPEN ]------------------------------------------------ 
#
includes/page_header.php

# 
#-----[ FIND ]------------------------------------------------ 
#
// Start add - Advanced time management MOD
if ( $userdata['user_id'] != ANONYMOUS )
{
	switch ( $userdata['user_time_mode'] ) 
	{ 
		case 1:
			$time_message = sprintf($lang['All_times'], $l_timezone) . $lang['dst_enabled_mode'];
			break;
		case 2:
			$time_message = sprintf($lang['All_times'], $l_timezone);
			if ( date('I', time()) )
			{
				$time_message = $time_message . $lang['dst_enabled_mode'];
			}
			break;
		case 3:
			$time_message = $lang['full_server_mode'];
			break;
		case 4:
		case 5:
			$time_message = $lang['server_pc_mode'];
			break;
		case 6:
			$time_message = $lang['full_pc_mode'];
			break;
		default:
			$time_message = sprintf($lang['All_times'], $l_timezone);
			break;
	}
} else
{
	switch ( $board_config['default_time_mode'] ) 
	{ 
		case 1:
			$time_message = sprintf($lang['All_times'], $l_timezone) . $lang['dst_enabled_mode'];
			break;
		case 2:
			$time_message = sprintf($lang['All_times'], $l_timezone);
			if ( date('I', time()) )
			{
				$time_message = $time_message . $lang['dst_enabled_mode'];
			}
			break;
		case 3:
			$time_message = $lang['full_server_mode'];
			break;
		case 4:
		case 5:
			$time_message = $lang['server_pc_mode'];
			break;
		case 6:
			$time_message = $lang['full_pc_mode'];
			break;
		default:
			$time_message = sprintf($lang['All_times'], $l_timezone);
			break;
	}
}

$time_message = str_replace('GMT', 'UTC', $time_message);

$script_name = preg_replace('/^\/?(.*?)\/?$/', '\1', trim($board_config['script_path']));
$server_name = trim($board_config['server_name']);
$server_protocol = ( $board_config['cookie_secure'] ) ? 'https://' : 'http://';
$server_port = ( $board_config['server_port'] <> 80 ) ? ':' . trim($board_config['server_port']) . '/' : '/';

$server_url = $server_protocol . $server_name . $server_port . $script_name;
// End add - Advanced time management MOD

#
#-----[ REPLACE WITH ]----------------------------------------
#
// Start add - Advanced time management MOD
if ( $userdata['user_id'] != ANONYMOUS )
{
	switch ( $userdata['user_time_mode'] ) 
	{ 
		case MANUAL_DST:
			$time_message = sprintf($lang['All_times'], $l_timezone) . $lang['dst_enabled_mode'];
			break;
		case SERVER_SWITCH:
			$time_message = sprintf($lang['All_times'], $l_timezone);
			if ( date('I', time()) )
			{
				$time_message = $time_message . $lang['dst_enabled_mode'];
			}
			break;
		case FULL_SERVER:
			$time_message = $lang['full_server_mode'];
			break;
		case SERVER_PC:
			$time_message = $lang['server_pc_mode'];
			break;
		case FULL_PC:
			$time_message = $lang['full_pc_mode'];
			break;
		default:
			$time_message = sprintf($lang['All_times'], $l_timezone);
			break;
	}
} else
{
	switch ( $board_config['default_time_mode'] ) 
	{ 
		case MANUAL_DST:
			$time_message = sprintf($lang['All_times'], $l_timezone) . $lang['dst_enabled_mode'];
			break;
		case SERVER_SWITCH:
			$time_message = sprintf($lang['All_times'], $l_timezone);
			if ( date('I', time()) )
			{
				$time_message = $time_message . $lang['dst_enabled_mode'];
			}
			break;
		case FULL_SERVER:
			$time_message = $lang['full_server_mode'];
			break;
		case SERVER_PC:
			$time_message = $lang['server_pc_mode'];
			break;
		case FULL_PC:
			$time_message = $lang['full_pc_mode'];
			break;
		default:
			$time_message = sprintf($lang['All_times'], $l_timezone);
			break;
	}
}

$time_message = str_replace('GMT', 'UTC', $time_message);

$script_name = preg_replace('/^\/?(.*?)\/?$/', '\1', trim($board_config['script_path']));
$server_name = trim($board_config['server_name']);
$server_protocol = ( $board_config['cookie_secure'] ) ? 'https://' : 'http://';
$server_port = ( $board_config['server_port'] <> 80 ) ? ':' . trim($board_config['server_port']) . '/' : '/';

$server_url = $server_protocol . $server_name . $server_port . $script_name;
// End add - Advanced time management MOD
# 
#-----[ OPEN ]------------------------------------------------ 
#
includes/sessions.php 

# 
#-----[ FIND ]------------------------------------------------
# 
// Start add - Advanced time management MOD
@ini_set('arg_separator.output', '&amp;');
session_start();

$pc_dateTime_update = '';

if ( isset($HTTP_GET_VARS['pc_tzo']) )
{
	$_SESSION['pc_timezoneOffset'] = intval($HTTP_GET_VARS['pc_tzo']);
	$pc_dateTime['pc_timezoneOffset'] = $_SESSION['pc_timezoneOffset'];

	$server_time = @gmdate(G)*3600 + @gmdate(i)*60 + @gmdate(s);

	if ( intval($HTTP_GET_VARS['pc_d']) == @gmdate(Ymd) )
	{
		$_SESSION['pc_timeOffset'] = intval($HTTP_GET_VARS['pc_t']) - $server_time;
	} else
	{
		$_SESSION['pc_timeOffset'] = 86400 - $server_time + intval($HTTP_GET_VARS['pc_t']);
	}

	$pc_dateTime['pc_timeOffset'] = $_SESSION['pc_timeOffset'];

	$pc_dateTime_update = 'yes';

} else if ( isset($_SESSION['pc_timezoneOffset']) )
{
	$pc_dateTime['pc_timezoneOffset'] = $_SESSION['pc_timezoneOffset'];
	$pc_dateTime['pc_timeOffset'] = $_SESSION['pc_timeOffset'];
}
// End add - Advanced time management MOD

#
#-----[ REPLACE WITH ]----------------------------------------
#
// Start add - Advanced time management MOD
@ini_set('arg_separator.output', '&amp;');
session_start();

$pc_dateTime_update = False;

if ( isset($HTTP_GET_VARS['pc_tzo']) )
{
	$HTTP_SESSION_VARS['pc_timezoneOffset'] = intval($HTTP_GET_VARS['pc_tzo']);
	$pc_dateTime['pc_timezoneOffset'] = $HTTP_SESSION_VARS['pc_timezoneOffset'];

	$server_time = @gmdate(G)*3600 + @gmdate(i)*60 + @gmdate(s);

	if ( intval($HTTP_GET_VARS['pc_d']) == @gmdate(Ymd) )
	{
		$HTTP_SESSION_VARS['pc_timeOffset'] = intval($HTTP_GET_VARS['pc_t']) - $server_time;
	} else
	{
		$HTTP_SESSION_VARS['pc_timeOffset'] = 86400 - $server_time + intval($HTTP_GET_VARS['pc_t']);
	}

	$pc_dateTime['pc_timeOffset'] = $HTTP_SESSION_VARS['pc_timeOffset'];

	$pc_dateTime_update = True;

} else if ( isset($HTTP_SESSION_VARS['pc_timezoneOffset']) )
{
	$pc_dateTime['pc_timezoneOffset'] = $HTTP_SESSION_VARS['pc_timezoneOffset'];
	$pc_dateTime['pc_timeOffset'] = $HTTP_SESSION_VARS['pc_timeOffset'];
}
// End add - Advanced time management MOD
# 
#-----[ FIND ]------------------------------------------------
#
|| $pc_dateTime_update == 'yes'

# 
#-----[ IN-LINE FIND ]----------------------------------------
#
|| $pc_dateTime_update == 'yes'

# 
#-----[ IN-LINE REPLACE WITH ]--------------------------------
# 
|| $pc_dateTime_update == True

# 
#-----[ OPEN ]------------------------------------------------ 
# 
includes/usercp_register.php 

# 
#-----[ FIND ]------------------------------------------------ 
# 
// Start add - Advanced time management MOD
$l_time_mode_0 = $lang['time_mode_dst_off'];
$l_time_mode_1 = $lang['time_mode_dst_on'];
$l_time_mode_2 = $lang['time_mode_dst_server'];
$l_time_mode_3 = $lang['time_mode_full_server'];
$l_time_mode_4 = $lang['time_mode_server_pc'];
$l_time_mode_6 = $lang['time_mode_full_pc'];

switch ($board_config['default_time_mode']) 
{ 
	case 1:
		$l_time_mode_1 = $l_time_mode_1 . "*";
		break;
	case 2:
		$l_time_mode_2 = $l_time_mode_2 . "*";
		break;
	case 3:
		$l_time_mode_3 = $l_time_mode_3 . "*";
		break;
	case 4:
	case 5:
		$l_time_mode_4 = $l_time_mode_4 . "*";
		break;
	case 6:
		$l_time_mode_6 = $l_time_mode_6 . "*";
		break;
	default:
		$l_time_mode_0 = $l_time_mode_0 . "*";
		break;
} 

switch ($time_mode) 
{ 
	case 1:
		$time_mode_manual_dst_checked="checked=\"checked\"";
		break;
	case 2:
		$time_mode_server_switch_checked="checked=\"checked\"";
		break;
	case 3:
		$time_mode_full_server_checked="checked=\"checked\"";
		break;
	case 4:
	case 5:
		$time_mode_server_pc_checked="checked=\"checked\"";
		break;
	case 6:
		$time_mode_full_pc_checked="checked=\"checked\"";
		break;
	default:
		$time_mode_manual_checked="checked=\"checked\"";
		break;
} 
// End add - Advanced time management MOD

# 
#-----[ REPLACE WITH ]----------------------------------------
# 
// Start add - Advanced time management MOD
$l_time_mode_0 = "";
$l_time_mode_1 = "";
$l_time_mode_2 = $lang['time_mode_dst_server'];
$l_time_mode_3 = $lang['time_mode_full_server'];
$l_time_mode_4 = $lang['time_mode_server_pc'];
$l_time_mode_6 = $lang['time_mode_full_pc'];

switch ($board_config['default_time_mode']) 
{ 
	case MANUAL_DST:
		$l_time_mode_1 = $l_time_mode_1 . "*";
		break;
	case SERVER_SWITCH:
		$l_time_mode_2 = $l_time_mode_2 . "*";
		break;
	case FULL_SERVER:
		$l_time_mode_3 = $l_time_mode_3 . "*";
		break;
	case SERVER_PC:
		$l_time_mode_4 = $l_time_mode_4 . "*";
		break;
	case FULL_PC:
		$l_time_mode_6 = $l_time_mode_6 . "*";
		break;
	default:
		$l_time_mode_0 = $l_time_mode_0 . "*";
		break;
} 

switch ($time_mode) 
{ 
	case MANUAL_DST:
		$time_mode_manual_dst_checked="checked=\"checked\"";
		break;
	case SERVER_SWITCH:
		$time_mode_server_switch_checked="checked=\"checked\"";
		break;
	case FULL_SERVER:
		$time_mode_full_server_checked="checked=\"checked\"";
		break;
	case SERVER_PC:
		$time_mode_server_pc_checked="checked=\"checked\"";
		break;
	case FULL_PC:
		$time_mode_full_pc_checked="checked=\"checked\"";
		break;
	default:
		$time_mode_manual_checked="checked=\"checked\"";
		break;
} 
// End add - Advanced time management MOD
# 
#-----[ OPEN ]------------------------------------------------ 
# 
templates/subSilver/profile_add_body.tpl 

# 
#-----[ FIND ]------------------------------------------------
# 
<!-- Start replacement - Advanced time management MOD -->
<tr>
	<td class="row1"><span class="gen">{L_TIME_MODE}:</span><br />
		<span class="gensmall">{L_TIME_MODE_TEXT}</span></td>
	<td class="row2">
		<span class="gen">{L_TIME_MODE_AUTO}</span><br />
		<input type="radio" name="time_mode" value="6" {TIME_MODE_FULL_PC_CHECKED}/>
		<span class="gen">{L_TIME_MODE_FULL_PC}</span>&nbsp;&nbsp;<br />
		<input type="radio" name="time_mode" value="4" {TIME_MODE_SERVER_PC_CHECKED}/>
		<span class="gen">{L_TIME_MODE_SERVER_PC}</span>&nbsp;&nbsp;<br />
		<input type="radio" name="time_mode" value="3" {TIME_MODE_FULL_SERVER_CHECKED}/>
		<span class="gen">{L_TIME_MODE_FULL_SERVER}</span>
		<br /><br />
		<span class="gen">{L_TIME_MODE_MANUAL}</span><br />
		<span class="gen">&nbsp;&nbsp;{L_TIME_MODE_DST}:</span><input type="radio" name="time_mode" value="1" {TIME_MODE_MANUAL_DST_CHECKED}/><span class="gen">{L_YES}</span>&nbsp;<input type="radio" name="time_mode" value="0" {TIME_MODE_MANUAL_CHECKED}/><span class="gen">{L_NO}</span>&nbsp;<input type="radio" name="time_mode" value="2" {TIME_MODE_SERVER_SWITCH_CHECKED}/><span class="gen">{L_TIME_MODE_DST_SERVER}</span><br />
		<span class="gen">&nbsp;&nbsp;{L_TIME_MODE_DST_TIME_LAG}: </span><input type="text" name="dst_time_lag" value="{DST_TIME_LAG}" maxlength="3" size="3" class="post" /><span class="gen">{L_TIME_MODE_DST_MN}</span><br />
		<span class="gen">&nbsp;&nbsp;{L_TIME_MODE_TIMEZONE}: </span><span class="gensmall">{TIMEZONE_SELECT}</span></td>
</tr>
<!-- End replacement - Advanced time management MOD -->

# 
#-----[ REPLACE WITH ]----------------------------------------
# 
<!-- Start replacement - Advanced time management MOD -->
<tr>
	<td class="row1"><span class="gen">{L_TIME_MODE}:</span><br />
		<span class="gensmall">{L_TIME_MODE_TEXT}</span></td>
	<td class="row2">
		<span class="gen">{L_TIME_MODE_AUTO}</span><br />
		<input type="radio" name="time_mode" value="6" {TIME_MODE_FULL_PC_CHECKED}/>
		<span class="gen">{L_TIME_MODE_FULL_PC}</span>&nbsp;&nbsp;<br />
		<input type="radio" name="time_mode" value="4" {TIME_MODE_SERVER_PC_CHECKED}/>
		<span class="gen">{L_TIME_MODE_SERVER_PC}</span>&nbsp;&nbsp;<br />
		<input type="radio" name="time_mode" value="3" {TIME_MODE_FULL_SERVER_CHECKED}/>
		<span class="gen">{L_TIME_MODE_FULL_SERVER}</span>
		<br /><br />
		<span class="gen">{L_TIME_MODE_MANUAL}</span><br />
		<span class="gen">&nbsp;&nbsp;{L_TIME_MODE_DST}:</span><input type="radio" name="time_mode" value="1" {TIME_MODE_MANUAL_DST_CHECKED}/><span class="gen">{L_YES}{L_TIME_MODE_DST_ON}</span>&nbsp;<input type="radio" name="time_mode" value="0" {TIME_MODE_MANUAL_CHECKED}/><span class="gen">{L_NO}{L_TIME_MODE_DST_OFF}</span>&nbsp;<input type="radio" name="time_mode" value="2" {TIME_MODE_SERVER_SWITCH_CHECKED}/><span class="gen">{L_TIME_MODE_DST_SERVER}</span><br />
		<span class="gen">&nbsp;&nbsp;{L_TIME_MODE_DST_TIME_LAG}: </span><input type="text" name="dst_time_lag" value="{DST_TIME_LAG}" maxlength="3" size="3" class="post" /><span class="gen">{L_TIME_MODE_DST_MN}</span><br />
		<span class="gen">&nbsp;&nbsp;{L_TIME_MODE_TIMEZONE}: </span><span class="gensmall">{TIMEZONE_SELECT}</span></td>
</tr>
<!-- End replacement - Advanced time management MOD -->
# 
#-----[ OPEN ]------------------------------------------------ 
# 
templates/subSilver/admin/user_edit_body.tpl

# 
#-----[ FIND ]------------------------------------------------ 
# 
<!-- Start replacement - Advanced time management MOD -->
<tr>
	<td class="row1"><span class="gen">{L_TIME_MODE}</span><br />
		<span class="gensmall">{L_TIME_MODE_TEXT}</span></td>
	<td class="row2" nowrap="nowrap">
		<span class="gen">{L_TIME_MODE_AUTO}</span><br />
		<input type="radio" name="time_mode" value="6" {TIME_MODE_FULL_PC_CHECKED}/>
		<span class="gen">{L_TIME_MODE_FULL_PC}</span>&nbsp;&nbsp;<br />
		<input type="radio" name="time_mode" value="4" {TIME_MODE_SERVER_PC_CHECKED}/>
		<span class="gen">{L_TIME_MODE_SERVER_PC}</span>&nbsp;&nbsp;<br />
		<input type="radio" name="time_mode" value="3" {TIME_MODE_FULL_SERVER_CHECKED}/>
		<span class="gen">{L_TIME_MODE_FULL_SERVER}</span>
		<br /><br />
		<span class="gen">{L_TIME_MODE_MANUAL}</span><br />
		<span class="gen">&nbsp;&nbsp;{L_TIME_MODE_DST}:</span><input type="radio" name="time_mode" value="1" {TIME_MODE_MANUAL_DST_CHECKED}/><span class="gen">{L_YES}</span>&nbsp;<input type="radio" name="time_mode" value="0" {TIME_MODE_MANUAL_CHECKED}/><span class="gen">{L_NO}</span>&nbsp;<input type="radio" name="time_mode" value="2" {TIME_MODE_SERVER_SWITCH_CHECKED}/><span class="gen">{L_TIME_MODE_DST_SERVER}</span><br />
		<span class="gen">&nbsp;&nbsp;{L_TIME_MODE_DST_TIME_LAG}: </span><input type="text" name="dst_time_lag" value="{DST_TIME_LAG}" maxlength="3" size="3" class="post" /><span class="gen">{L_TIME_MODE_DST_MN}</span><br />
		<span class="gen">&nbsp;&nbsp;{L_TIME_MODE_TIMEZONE}: </span><span class="gensmall">{TIMEZONE_SELECT}</span></td>
</tr>
<!-- End replacement - Advanced time management MOD -->

# 
#-----[ REPLACE WITH ]----------------------------------------
#
<!-- Start replacement - Advanced time management MOD -->
<tr>
	<td class="row1"><span class="gen">{L_TIME_MODE}</span><br />
		<span class="gensmall">{L_TIME_MODE_TEXT}</span></td>
	<td class="row2" nowrap="nowrap">
		<span class="gen">{L_TIME_MODE_AUTO}</span><br />
		<input type="radio" name="time_mode" value="6" {TIME_MODE_FULL_PC_CHECKED}/>
		<span class="gen">{L_TIME_MODE_FULL_PC}</span>&nbsp;&nbsp;<br />
		<input type="radio" name="time_mode" value="4" {TIME_MODE_SERVER_PC_CHECKED}/>
		<span class="gen">{L_TIME_MODE_SERVER_PC}</span>&nbsp;&nbsp;<br />
		<input type="radio" name="time_mode" value="3" {TIME_MODE_FULL_SERVER_CHECKED}/>
		<span class="gen">{L_TIME_MODE_FULL_SERVER}</span>
		<br /><br />
		<span class="gen">{L_TIME_MODE_MANUAL}</span><br />
		<span class="gen">&nbsp;&nbsp;{L_TIME_MODE_DST}:</span><input type="radio" name="time_mode" value="1" {TIME_MODE_MANUAL_DST_CHECKED}/><span class="gen">{L_YES}{L_TIME_MODE_DST_ON}</span>&nbsp;<input type="radio" name="time_mode" value="0" {TIME_MODE_MANUAL_CHECKED}/><span class="gen">{L_NO}{L_TIME_MODE_DST_OFF}</span>&nbsp;<input type="radio" name="time_mode" value="2" {TIME_MODE_SERVER_SWITCH_CHECKED}/><span class="gen">{L_TIME_MODE_DST_SERVER}</span><br />
		<span class="gen">&nbsp;&nbsp;{L_TIME_MODE_DST_TIME_LAG}: </span><input type="text" name="dst_time_lag" value="{DST_TIME_LAG}" maxlength="3" size="3" class="post" /><span class="gen">{L_TIME_MODE_DST_MN}</span><br />
		<span class="gen">&nbsp;&nbsp;{L_TIME_MODE_TIMEZONE}: </span><span class="gensmall">{TIMEZONE_SELECT}</span></td>
</tr>
<!-- End replacement - Advanced time management MOD -->
# 
#-----[ SAVE/CLOSE ALL FILES ]-------------------------------- 
# 
# EoM